name: android

on:
  push:
    branches:
      - main
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'
  pull_request:
    branches:
      - main

  workflow_dispatch:

concurrency:
  group: android-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-android-libs:
    name: Android for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Display NDK HOME
        shell: bash
        run: |
          echo "ANDROID_NDK_LATEST_HOME: ${ANDROID_NDK_LATEST_HOME}"
          ls -lh ${ANDROID_NDK_LATEST_HOME}

      - name: Prepare the submodule files i.e FunASR
        shell: bash
        run: |
          git submodule update --init --recursive 
          ls -lt FunASR

      - name: Prepare nlohmann json
        shell: bash
        run: |
          wget https://github.com/nlohmann/json/releases/download/v3.11.3/json.tar.xz
          tar -xvf json.tar.xz
          ls -lt

      # - name: build android arm64-v8a
      #   shell: bash
      #   run: |
      #     pwd
      #     ls -lt .
      #     ls -lt FunASR
      #     export ANDROID_NDK=$ANDROID_NDK_LATEST_HOME
      #     ./build-android-arm64-v8a.sh
      #     mkdir -p jniLibs/arm64-v8a/
      #     cp -v ./build-android-arm64-v8a/install/lib/*.so ./jniLibs/arm64-v8a/
      #     rm -rf  ./build-android-arm64-v8a/

      # - name: build android armv7-eabi
      #   shell: bash
      #   run: |
      #     export ANDROID_NDK=$ANDROID_NDK_LATEST_HOME
      #     ./build-android-armv7-eabi.sh
      #     mkdir -p ./jniLibs/armeabi-v7a/
      #     cp -v ./build-android-armv7-eabi/install/lib/*.so ./jniLibs/armeabi-v7a/
      #     rm -rf ./build-android-armv7-eabi

      - name: test task, imitating the above 2 tasks done
        shell: bash
        run: |
          mkdir -p ./jniLibs/armeabi-v7a/
          touch ./jniLibs/armeabi-v7a/test_no_content.so

      - name: Copy files
        id: copy_files
        shell: bash
        run: |
          FUNASR_ANDROID_VERSION=v$(grep "FUNASR_ANDROID_VERSION" ./CMakeLists.txt  | cut -d " " -f 2  | cut -d '"' -f 2)
          echo "FUNASR_ANDROID_VERSION=$FUNASR_ANDROID_VERSION" >> "$GITHUB_ENV"

          filename=funasr_android-${FUNASR_ANDROID_VERSION}-android.tar.bz2

          tar cjvf $filename ./jniLibs

          ls -lh

      - name: Release android libs
        uses: svenstaro/upload-release-action@v2
        with:
          file: funasr*.tar.bz2
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}
          